##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.4.0-B60] date: [Thu Nov 07 17:54:55 ICT 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = rocket_code


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

DRIVER_PATH = /home/dat/Documents/colir_one/rocket_code
OPENOCD_PATH = /home/dat/.config/Code/User/globalStorage/litaitech.stm32-colir-one/@xpack-dev-tools/openocd/0.12.0-4.1/.content/bin/openocd
GCC_PATH = /home/dat/.config/Code/User/globalStorage/litaitech.stm32-colir-one/@xpack-dev-tools/arm-none-eabi-gcc/13.3.1-1.1.1/.content/bin


######################################
# source
######################################
# C sources
C_SOURCES =  \
$(DRIVER_PATH)/Module/Src/nrf24.c \
$(DRIVER_PATH)/Module/Src/bmp581.c \
$(DRIVER_PATH)/Module/Src/bno055.c \
$(DRIVER_PATH)/Module/Src/fifo.c \
$(DRIVER_PATH)/Module/Src/log.c \
$(DRIVER_PATH)/Module/Src/nmea_parse.c \
$(DRIVER_PATH)/Module/Src/pca9685.c \
$(DRIVER_PATH)/Module/Src/redirect.c \
$(DRIVER_PATH)/Module/Src/stm32f4xx_hal_msp.c \
$(DRIVER_PATH)/Module/Src/stm32f4xx_it.c \
$(DRIVER_PATH)/Module/Src/syscalls.c \
$(DRIVER_PATH)/Module/Src/sysmem.c \
$(DRIVER_PATH)/Module/Src/system_stm32f4xx.c \
$(DRIVER_PATH)/Module/Src/uart.c \
$(DRIVER_PATH)/Module/Src/usb_com.c \
$(DRIVER_PATH)/Module/Src/util.c \
$(DRIVER_PATH)/Module/Src/w25qxx.c \
$(DRIVER_PATH)/Module/Src/init.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_i2c_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pcd.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pcd_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_sd.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_spi.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_sdmmc.c \
${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_ll_usb.c \
${DRIVER_PATH}/Drivers/bmp5_api/Src/bmp5.c \
${DRIVER_PATH}/FATFS/App/fatfs.c \
${DRIVER_PATH}/FATFS/Target/bsp_driver_sd.c \
${DRIVER_PATH}/FATFS/Target/fatfs_platform.c \
${DRIVER_PATH}/FATFS/Target/sd_diskio.c \
${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c \
${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c \
${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c \
${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c \
${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src/diskio.c \
${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src/ff.c \
${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src/ff_gen_drv.c \
${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src/option/ccsbcs.c \
${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src/option/syscall.c \
${DRIVER_PATH}/USB_DEVICE/App/usb_device.c \
${DRIVER_PATH}/USB_DEVICE/App/usbd_cdc_if.c \
${DRIVER_PATH}/USB_DEVICE/App/usbd_desc.c \
${DRIVER_PATH}/USB_DEVICE/Target/usbd_conf.c \

CXXSOURCES = \
${DRIVER_PATH}/ColirOne/Src/barometer.cpp \
${DRIVER_PATH}/ColirOne/Src/colir_one.cpp\
${DRIVER_PATH}/ColirOne/Src/gps.cpp \
${DRIVER_PATH}/ColirOne/Src/imu.cpp \
${DRIVER_PATH}/ColirOne/Src/lighter.cpp \
${DRIVER_PATH}/ColirOne/Src/servo.cpp \
${DRIVER_PATH}/ColirOne/Src/rf.cpp \
${DRIVER_PATH}/ColirOne/Src/logger.cpp \
Src/main.cpp 

# ASM sources
ASM_SOURCES =  \
startup_stm32f407xx.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F407xx \
-DAPP_CONFIG=\"config.h\"

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-I${DRIVER_PATH}/FATFS/Target \
-I${DRIVER_PATH}/FATFS/App \
-I${DRIVER_PATH}/Module/Inc \
-I${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Inc \
-I${DRIVER_PATH}/Drivers/STM32F4xx_HAL_Driver/Inc/Legacy \
-I${DRIVER_PATH}/Middlewares/Third_Party/FatFs/src \
-I${DRIVER_PATH}/Drivers/CMSIS/Device/ST/STM32F4xx/Include \
-I${DRIVER_PATH}/Drivers/CMSIS/Include \
-I${DRIVER_PATH}/Drivers/bmp5_api/Inc \
-I${DRIVER_PATH}/USB_DEVICE/App \
-I${DRIVER_PATH}/USB_DEVICE/Target \
-I${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Core/Inc \
-I${DRIVER_PATH}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc \
-I${DRIVER_PATH}/ColirOne/Inc \
-IInc

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections 

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32F407VETX_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections -u _printf_float

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CXXSOURCES:.cpp=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
vpath %.cpp $(sort $(dir $(CXXSOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
	$(CXX) -c $(CFLAGS) -o $@ $<

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

flash: $(BUILD_DIR)/$(TARGET).elf
	$(OPENOCD_PATH) -f ./openocd.cfg -c "program $(BUILD_DIR)/$(TARGET).elf verify reset exit"
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***